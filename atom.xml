<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[编程向左，人生向右]]></title>
  <link href="http://luckyyang.github.com/atom.xml" rel="self"/>
  <link href="http://luckyyang.github.com/"/>
  <updated>2013-06-18T22:02:05+08:00</updated>
  <id>http://luckyyang.github.com/</id>
  <author>
    <name><![CDATA[Jiyang Liu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[我不喜欢电脑]]></title>
    <link href="http://luckyyang.github.com/blog/2013/06/18/i-dont-like-computer/"/>
    <updated>2013-06-18T21:53:00+08:00</updated>
    <id>http://luckyyang.github.com/blog/2013/06/18/i-dont-like-computer</id>
    <content type="html"><![CDATA[<p><img src="http://luckyyang.github.com/images/hack_the_planet.jpg" title="各种点啊" alt="hack the planet!" width="500"></p>

<p>对，我不喜欢电脑。</p>

<p>你一定觉得我很虚伪：</p>

<ul>
<li>每天大半的时间都和电脑在一起；</li>
<li><a href="http://luckyyang.github.io/blog/categories/100jian-rang-wo-kai-xin-de-shi/">开心的事情</a>也通过电脑发出来；</li>
<li><a href="https://github.com/happypeter/onestep/issues?page=1&amp;state=open">日常工作</a>和生活中，电脑都是贴心助手；</li>
</ul>


<!-- more -->


<p>这我都承认。是啊，电脑对我这么重要。但我还是不喜欢。</p>

<p>我可以随便说出几个我不喜欢电脑的理由：</p>

<ul>
<li>经常使用电脑，眼睛不舒服，视力已经不如以前了；</li>
<li>让我的后背经常不舒服；</li>
<li>和电脑相处时间长，和人相处的时间就相对少了；</li>
</ul>


<p>你说这些都是什么理由啊，明明都是自己的原因！是啊，我也不得不承认。</p>

<p>说白了，我不喜欢电脑，不是说我想离电脑越远越好，我不喜欢的只是这种机械的硬帮帮的东西，它不是真实的，屏幕上显示的东西实际上是由一系列像素点组合成的，像我现在每敲一个字，cpu就在计算，然后调度，在屏幕上画点，画很多很多的点，最后就形成了不同的图像。</p>

<p>而我离不开电脑，是因为她带给我很多快乐的东西。让我充实和快乐的事情都是通过电脑完成的：</p>

<ul>
<li>读书。有了电脑，就不用抱着纸质的书看了，搜索也很方便。每天拿出1-2个小时看看书，真是一件很奢侈的事啊。</li>
<li>吸收各种信息。网络上的信息真是太丰富了，只要你去发现，总会发现你的菜。</li>
<li>写代码。不用说，创造性的劳动总是会给人带来很大的成就感。而写出来的作品就好像画家用画笔在画板上作画，音乐家用乐器演奏一样，他们也不一定喜欢这些硬帮帮的东西，工具只是让你达到某个目的的东西，你怎样使用，就赋予了它不同的意义，它也就具有了生命。</li>
</ul>


<p>我是基本上不会在电脑上打游戏的，如果有时间，我更喜欢去<a href="http://luckyyang.github.io/blog/2013/06/08/100-happy-things-number-1/">打会篮球</a>，或者<a href="http://luckyyang.github.io/blog/2013/06/09/100-happy-things-number-2/">去海边走走</a>。</p>

<p>能带给人思想自由，让人充实和快乐的东西都是好的，包括电脑。但我还是不喜欢。（完）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[100件让我开心的事 #3]]></title>
    <link href="http://luckyyang.github.com/blog/2013/06/18/100-happy-things-number-3/"/>
    <updated>2013-06-18T20:18:00+08:00</updated>
    <id>http://luckyyang.github.com/blog/2013/06/18/100-happy-things-number-3</id>
    <content type="html"><![CDATA[<p><img src="http://luckyyang.github.com/images/happypeter.jpg" title="peter！" alt="peter" width="500"></p>

<p>Peter 要搬过来。（完）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[100件让我开心的事 #2]]></title>
    <link href="http://luckyyang.github.com/blog/2013/06/09/100-happy-things-number-2/"/>
    <updated>2013-06-09T23:29:00+08:00</updated>
    <id>http://luckyyang.github.com/blog/2013/06/09/100-happy-things-number-2</id>
    <content type="html"><![CDATA[<p><img src="http://luckyyang.github.com/images/sand_and_sea.jpg" title="海和沙子" alt="大海和沙子" width="500"></p>

<h3>海边的沙子</h3>

<p>每次来到海边都让我感觉很放松，而且那种放松是自己提前不会想到的，就算离海边还有50米也不会感觉到。而到了海边，自己所有的思绪都被海水洗涤了一样，海浪的声音也会带给我一种融入感，感觉自己也和这美好的一切融合到了一起。躺在沙滩上，身体摆个“大”字（有些人会摆“木”字），仰望着蓝天，感受着咸腥的海风吹拂着身上的汗毛，簌簌的，轻轻的；今天的沙子温度正好和人的皮肤温度差不多，抚摸着细细的沙子，软软的就好像少女的肌肤一样。</p>

<p>现在就有人在游泳，看得我心里直痒痒。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[100件让我开心的事 #1]]></title>
    <link href="http://luckyyang.github.com/blog/2013/06/08/100-happy-things-number-1/"/>
    <updated>2013-06-08T20:05:00+08:00</updated>
    <id>http://luckyyang.github.com/blog/2013/06/08/100-happy-things-number-1</id>
    <content type="html"><![CDATA[<p><img src="http://luckyyang.github.com/images/basketball_court.jpg" title="篮球，我爱你！" alt="其实球场是水泥地" width="500"></p>

<h3>今天打篮球很开心</h3>

<p>难得能打一次很开心的篮球。不是说平常打的不开心，只是现在如果能打的很开心的话，需要几个因素：</p>

<ul>
<li>自己的状态不要太差，也就是正常发挥就好；</li>
<li>打球的两方势均力敌；</li>
<li>积极进攻和防守，球的轮转合理；</li>
</ul>


<p>这样的情况一般很难找，因为很多情况下都是两方实力差距太大，所以你也会打的很没兴致。现在我对输赢不是太在意，只是能尽兴就好。</p>

<p>虽然把左手拇指戳了，但还是很开心。输球的一方做俯卧撑，我们一方做了大概5个，对方大概10个。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何保持好的心态]]></title>
    <link href="http://luckyyang.github.com/blog/2013/06/05/how-to-keep-a-good-mood/"/>
    <updated>2013-06-05T10:47:00+08:00</updated>
    <id>http://luckyyang.github.com/blog/2013/06/05/how-to-keep-a-good-mood</id>
    <content type="html"><![CDATA[<p><img src="http://luckyyang.github.com/images/naked_plates.jpg" title="吃货自白：其实也没吃多少啦" alt="吃货自白：其实也没吃多少啦" width="500"></p>

<p>这不是一个教程和说教，只是我自己每天都在实践的，还有自己的感受。如果你想了解更多的方法，去google “如何保持好的心态”，我相信你会找到很多很好的文章。</p>

<h3>微笑</h3>

<p>多微笑一点吧，你知不知道你不经意的一个微笑会给人带来多少的阳光么？至少我是这样，如果我去买杯豆浆，售货员如果对我笑笑，我会开心好一阵的。</p>

<!-- more -->


<p>前一段时间，一个女孩对我说：“你好像一个泥鳅一样，滑滑的，总是滑滑的”。她的意思是说，我的表情为什么没有非常多的变化，要么很平静，要么总是微笑。然后我给她的回复是：一个大大的微笑。这里当然和她对我不了解和我们对很多事情的看法不同而导致她对我那样的评价有很大的关系，但我想说的是，有时候你的解释还不如一个大大的微笑。</p>

<p>我高中时的外号是“嘻嘻”，你会知道我有多爱笑了吧。开心时我会笑，不赞同别人而又觉得争论没有意义时我会笑，别人不理解我时我会笑，出丑时我也会笑。。。</p>

<p>我最尴尬的情况是，当一个你认识或者说有一面之缘的人和你迎面走来，你做好微笑和准备说hi而人家却故意无视你的那种场景。我理解他们，同时我也很怜悯他们，到底他们受了什么伤害才把自己装在一个壳里，不肯施舍一点关怀和微笑呢。这种情况在我的上一家公司频繁重演，好像让我又回到了青春期一样，明明和我是一个组的！明明和我讨论过几次问题的！明明我们都知道对方的名字的！每次遇到这些人，我的思绪都会把自己折磨千百遍，一直在想“怎么办怎么办怎么办？”，如果对方每次都不理我让我的微笑在那冷着也好，那下次我也会长记性知道应该摆出一副大意凛然的姿态大踏步地走过去然后下次讨论问题也一样happy了，可惜不是的，真的不是，这种情况就好像一个小概率事件一样，你知道基本不会发生但你又无法忽视，所以每次我还要摆出那种内心纠结和忐忑而表面却善意和平和的微笑，最后感觉自己的微笑慢慢变冷，就好像你的小弟弟还没到却自己软下来的那种不情愿。</p>

<h3>少皱眉</h3>

<p>是的，我知道你在思考；是的，我知道你反对；其实你不用皱眉我也知道。我周围很多人都喜欢皱眉，导致额头那越来越深的“皱眉痕”（我发明的），但如果你说你是故意想要那样，那我也没什么说的，因为你的偶像某些个男演员确实也是那样。那我想请问，是不是会有下面的问题呢？一个人的面相多少可以反映一个人的内心，那反过来面相是否也会影响内心的心情呢？我相信会的。你对着镜子笑笑和皱个眉头，就知道我说的什么意思了。</p>

<p>对于皱眉，或者其它的面部表情，有些自己是感觉不到自己的脸部肌肉是如何变化的，除非你稍微刻意地在意一下。那如果从这一点来说，如果自己不照镜子，是注意不到自己的皱眉头的，所以也不太会影响自己的心情？所以我的这三段话（下面还会写一段）白写了？</p>

<p>当然不白写，当你照镜子发现自己有皱眉痕的时候你就知道我说的是什么了。</p>

<h3>少用否定</h3>

<p>这几个句子，看看自己是不是常说：</p>

<ul>
<li>不要难过啦；</li>
<li>不要那样做；</li>
<li>不要烦我；</li>
</ul>


<p>或者可以这样表达：</p>

<ul>
<li>开心一点嘛；</li>
<li>为何不这样做：。。。；</li>
<li>让我自己待一会；</li>
</ul>


<p>你说什么你就会想什么，说“不要难过”，心里想的是“不”和“难过”，都是消极的词语，心情是不是也会受影响呢？这种交流会是一系列的反应，你说某个句子，对方会有情感产生，然后对方给你一个回馈，你再从对方的回馈中获得信息，进而继续进行交流的过程，你们之间的关系也会因为整个过程得到某种联系。而否定的句子也很容易让对方产生否定的情感，所以还是注意一下吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[你可以做到]]></title>
    <link href="http://luckyyang.github.com/blog/2013/06/04/seven-month-after-resign/"/>
    <updated>2013-06-04T23:37:00+08:00</updated>
    <id>http://luckyyang.github.com/blog/2013/06/04/seven-month-after-resign</id>
    <content type="html"><![CDATA[<p><img src="http://luckyyang.github.com/images/you_did_it.jpg" alt="你做到了" width="500"></p>

<p>从去年11月2号辞职到现在，已经过了7个月加2天。我还好好的活着，感谢一直关心和担心我的人。</p>

<h3>工作</h3>

<p>这份工作是我最没有犹豫的一份工作，当时peter邀请我一起创业，我马上就答应了。现在我们的网站虽然还有很多工作要做，但是我们很努力也很开心，每天都在进步，网站和我们。用工作这个词，总是让我很谨慎，因为现在做的这个事情算不上一份工作，首先它没有钱，其次它还是没有钱。而我却愿意把余生都奉献给她。</p>

<!-- more -->


<p>原来我回顾自己的经历时，觉得每一步都不对，因为当时的自己还很抓瞎，总是觉得哪里不对劲，而自己的能力和经历又无法给自己指出一条明路，身边的人，包括很多上了年纪的人，也无法给我一个满意的建议。而现在，当我站在了一条对的路上，觉得原来的经历每一步都是对的，而且每每都很唏嘘，如果当时没那样，现在会这样么？！</p>

<h3>生活</h3>

<p>辞职7个月，也表明我已经7个月没有收入了，而且没向家里要一分钱。当我身边的资源很少时，我也更明白了哪些东西对我是最重要的。这时候我也发现，生活远远比自己想象的简单，只要认清最重要的是什么。</p>

<p>身边一直都有喜欢抱怨而不去改变的人。我想很多人活得不快乐的原因就是资源有限吧，比如金钱，比如时间。时间一直都是稀缺资源，如果时间可以无限多，那金钱也可以不停地赚了。时间有限，就看自己如何利用了，如果你每天的大部分时间都在做不喜欢的事，那可能你就是不快乐了。</p>

<p>我们每个人和这个世界的关系就好像一个系统一样，开始每个系统都差不多，运行良好，里面的齿轮润滑也很充分，螺丝拧的也足够紧。慢慢地每个系统都被加入了不同的零件，而且越来越多，系统就越来越复杂，就需要更多的时间和精力去维护，而有时候系统过于复杂，就很容易出故障，而某些故障也很难去修复。有意思的是，很多人一套系统都没有维护好，他会同时去维护多套系统——对领导是一套系统，对老婆是一套系统，对朋友是一套系统，对家里人又是一套系统，对陌生的人就根本没什么系统了。我一直在寻找自己的这套系统，如何能用一套系统来作为自己的行为准则，这样我一直做我自己，一直做最真实的自己就好了。这样我就可以用最少的时间维护好自己的系统，运行良好的系统也总是会让我开心，然后剩下的时间我就可以做自己喜欢的事情，比如看书，比如写代码，比如写点文章，再比如去海边和姑娘们交流捉蟹经验。</p>

<h3>爱情</h3>

<p>我最近一直在想一个逻辑：如果你让我做A（某件事）的话，我可以为你做A，因为你和我的关系好到我可以为你做A。但是如果你让我做A的话，就证明你不值得让我去为你去做A了，所以我永远也无法为你做A，这种事情也只能说说罢了，但是说的时候却是认真的。比如，我可以对我的挚爱说：我可以为你去死，因为我太爱你了。但是如果她真要我去死的话，我就会想，她让我死，说明她不爱我，那我就不值得为她而死了。而我也不觉得这是欺骗，因为我觉得如果当时是真心实意的自己的想法而且完全没有故意想伤害别人并且不求自己的好就不算欺骗。这种事情，我会选择相信，更不会想去试验，因为结果无论是什么，都会让两个人的关系产生裂痕。</p>

<p>失去爱情比失去工作的时间还要长3个月，这次没有那么纠结，没有那么痛，没有那么刻骨铭心。不是因为我成熟所以更懂得调整和保护自己，虽然我有一段时间一直这么觉得。其实不是，一是因为爱的不够深，二是因为知道对方没有那么离不开我；或者这两者也是互相关联的吧。我无法评判对方对我是否爱的足够深，我确定的是，我是。对每一份感情我都会全心付出，不求对方有同样的回报给我，我只是希望我能感受到对方对我有足够的爱，如果这也算我要求的回报的话，那就算我有所求吧。</p>

<p>分手对于我来说没那么痛，因为已经确定的东西一般不会衍生出更多烦心的东西。反而为了某个虚无飘渺的东西而坚持的那种半死不活的状态，才最让我受不了，而很多时候，我是没有能力去判断自己到底是不是处于这种状态，有时候是因为确实没有这种能力，而有时候是因为自己在局中。</p>

<h3>最后</h3>

<p>以前我喜欢听别人说，是因为我不够自信，我想通过别人的话来定位自己；现在我还是喜欢听别人说，因为我足够自信，我想多听听别人的故事。多少年后，我希望我给别人讲我自己故事的时候，还仍然用我最喜欢的臭屁的口气：切，有什么大不了，不就坚持一辈子，哥做到了！</p>

<p>P.S. 我想写一系列小的文章，就叫100件让自己开心的小事，一篇一篇的写，都是自己每天经历的。看写到第100篇的时候，自己会有什么样的变化。以前写过一些日记，记录自己每天都做什么了，学到了什么，哪里做的不好，哪里需要提高，想想当时的自己好可怕啊。还好，这件事还是比较有意思的，也比较好继续下去。（完）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fork You! Github（简化版）]]></title>
    <link href="http://luckyyang.github.com/blog/2013/04/11/fork-you-github-2nd-version/"/>
    <updated>2013-04-11T09:24:00+08:00</updated>
    <id>http://luckyyang.github.com/blog/2013/04/11/fork-you-github-2nd-version</id>
    <content type="html"><![CDATA[<div class="entry-content"><p>这篇文章是之前发布的<a href="http://luckyyang.github.io/blog/2013/03/23/fork-you-github/">Fork You！ Github</a>的简化版，去掉了一些比较口语话的东西。</p>

<p>3月23号，我和peter（<a href="http://happycasts.net/episodes/59">peter的视频</a>）被邀请<a href="http://idev.51qiangzuo.com/">iDev</a>做关于github的讲座，下面是我演讲的内容。</p>

<blockquote><p>幻灯片在这里(<a href="https://speakerdeck.com/luckyyang/fork-you-github">点这里进入下载幻灯片的页面</a>)：</p></blockquote>

<script async class="speakerdeck-embed"
data-id="c4bc0ed075aa0130a2171231392f4138" data-ratio="1.33507170795306"
src="http://luckyyang.github.com//speakerdeck.com/assets/embed.js"></script>


<p>我今天演讲的题目是“fork you，github”，fork在github中是指copy一份别人的代码到自己的代码库中。而我演讲标题中的这个fork主要是想fork github文化上的一些东西，谈一谈github的文化和工作方式，看一看哪些东西我们可以吸收和借鉴。这里我想用2个字来阐述：
<strong>异步</strong> ，这两个字也是我演讲的核心。这个演讲适合所有对github感兴趣的人：</p>

<!-- more -->


<ul>
<li>如果你还不是很了解github，你或许想知道现在为什么人们都在谈github；</li>
<li>如果你正在运营一个公司或者领导一个团队，你或许想知道营造一个什么样的文化，才能吸引到更多的人才，创造出伟大的产品；</li>
<li>还有如果你对github的文化和工作方式已经有了一定了了解，你或许还想知道“没有经理，没有会议，没有产品开发期限”是如何玩的转的。</li>
</ul>


<p>好，谈异步，我会从3个方面来说：工作方式，工具和人。</p>

<h2>工作方式</h2>

<p>github工作方式的异步，有三点：工作地点，工作时间和工作强度。</p>

<ul>
<li>工作地点可以随意选择，github有2/3的员工是远程工作的。在家里，或者在世界的各地。</li>
<li>工作时间自由支配，可以早上七点，也可以下午一点开始工作，自由支配，只要你效率高。</li>
<li>工作强度，根据自己的情况安排，只要你能写出好代码。</li>
</ul>


<p>关于工作方式，可以用这两点来解释：</p>

<h3>Hours Are Bullshit</h3>

<p>多长时间？我们在大学的时候就开始喜欢讨论时间长短的问题了，或者简单说长短的问题。现在到了工作上，我们仍然在讨论这个多长时间的问题，虽然讨论的焦点不同了，但是我的结论是一样的：这种讨论没有意义。</p>

<p>对于工厂来说，生产线运行的越久，工人工作的时间越长，那么生产的产品就越多，创造的价值也就更大。但是编程是一件创造性的劳动，需要集中精力，有个好的状态，才能写出高质量的代码。我听到过很多次有人说“我这几周每天都工作到凌晨1点”或者“我每天只睡5个小时”一类的话，其实这些话说明不了什么，说明不了你写了多好的代码，说明不了你的效率有多高，但基本可以说明的是，你的身体需要好好休息一下了。</p>

<p>他们说这些话的目的可能只是随口说说，没有炫耀的成分。但是这个话题还是很值得去聊一聊的，就拿我自己来说，我的身体素质是什么样的呢：</p>

<ul>
<li>我大学四年一直都是我们班体育委员，每学期的体育成绩都是优秀，接近满分；</li>
<li>大学时参加运动会也都会有名次；</li>
<li>工作后每周一般也要锻炼至少2次；</li>
</ul>


<p>所以我现在的习惯是，如果一周不让我玩两次的话，我感觉自己浑身不自在。</p>

<p>你们觉得我的身体素质应该还可以吧，但是我对每周工作多少小时一直都是很迷惑的，因为经常听到或者看到一些报道“我每周工作100小时，连续3个月，工作效率总是很高”或者“我是如何做到每天只睡4个小时的”。</p>

<p>而我从来，从来都没有做到过连续工作15小时这一类的事情，也做不到，所以经常觉得很失败。但现在我想对这些报导说，都是胡扯。就算他们能一个月都保持那样的效率，我绝对不相信他们可以一直持续的保持下去。</p>

<p>我有过在公司工作3年的经验，我只能说我总体上效率最好的时候可能只有每天6个小时，或者更少，每天上午9点到12点，我可以工作一阵，中午我必须要睡上半个小时，不然整个下午就好像梦游一样。午睡之后，下午2点到5点继续工作，然后剩下的半个小时，我会想健身的东西都带齐了没？上次自由泳游的不错的那个姑娘这次还能不能看到呢？而且从这一点上来说，我觉得也是KPI（绩效考核）对我有用的唯一一点，就是我不用因为工作时间少而感觉良心上过不去，我唯一要承担的就是我每个月的奖金少拿点。</p>

<p>我一般如果熬夜一次之后，都需要2天的时间才感觉身体完全恢复到很健康的状态。而且熬夜的状态，就感觉随着时间的流逝，自己的精神一点点被掏空了的感觉，根本谈不上什么创造性可言。</p>

<p>让我们再回味一下“每周工作100个小时。。。”这种话，这是一种典型的“生产线”思维方式，就是把工作任务的完成程度简单的用时间来衡量，工作的时间长，我做的工作就多，工作的时间长，我就超前于你，我才更有可能成功。</p>

<p>所以我对这种情况得出了2个结论：</p>

<ul>
<li>要么，他们从事的工作是“生产线”式的工作；</li>
<li>要么，他们就是在扯蛋。</li>
</ul>


<p>还有一点，对于编程这种创造性的劳动，人们关心工作时间的原因，是因为它是绩效考核的一部分，经理们喜欢用时间来作为考核标准的原因是，对于他们来说，用时间作为丈量标准比较简单，看起来也一视同仁。而用“代码写的怎么样，工作效率如何”这样的标准来衡量的话，太难了。所以当一个公司对时间关心更多的时候，他的员工也会这样。</p>

<p>其实，对于工作时间的探讨不是没有意义，但是其实我们关心的不是每周我们到底要工作多少时间，而关心的是如何实现工作和生活的平衡，在这个平衡的基础上，创造更多的价值。而对于如何实现这个平衡，没有一个万能的公式，你只有自己去多次尝试，给自己反馈，然后找到一个平衡的状态。最后，当你达到这个平衡状态之后，我想你更愿意和别人分享你做了什么让自己兴奋的项目，而不是说，我又搞了个通宵。</p>

<h3>Real Artists Ship</h3>

<p>真正的高手都是以是否能完成好的作品为目标进行创作的。写代码也是和艺术创作类似的活动，你无法强迫自己的灵感一定会在早9晚5这段时间出现。github让你自己决定适合自己的工作方式，他们有的早上7点就到公司工作，有的下午3点才到公司，还有的就坐自己家里工作，因为他们觉得在家里工作更能进入状态。</p>

<p>最终他们的这种灵活的工作方式，发现员工投入到工作中的时间更长了，因为你营造的这种氛围，让员工感觉很兴奋，也更愿意投入到创造当中。而创造的过程，也是非常高效的。</p>

<p>这点在我身上就是一个例子。我现在的工作时间，当然我是指效率高的时间，效率不高我是不会工作的，由原来的&lt;=6小时变成了现在的>=8小时，而且我还有时间学习吉他。</p>

<h2>工具</h2>

<p>工具确保了异步的工作流程，主要有三个工具：pull request，issues和wiki。</p>

<h3>Pull Request</h3>

<p>pull request（PR）相当于一个代码审核（review）系统。PR和之前的把人叫过来做代码审核的方式相比，就好像是钻木取火和用打火机的区别。</p>

<ul>
<li>省时
通过PR，就不用把别人叫过来做代码审核了，你把他叫过来之后，你还要在一边花时间等着他看你的那些修改。</li>
</ul>


<p>也省去了开会的麻烦，我们都有过不情愿过去开会的经历吧，而可能当时你的创造力正井喷。在PR上，不需要通过开会解决问题，我们可以就这个PR进行讨论，甚至可以就某一行或某一块代码进行讨论，而且讨论的内容都是大家经过思考才发布上去的，而不是经常毫无准备的就过去开会。</p>

<ul>
<li>省力
开会很耗费体力和脑力的过程。</li>
</ul>


<h3>Issues</h3>

<p>issues相当于一个简化版的bug追踪系统+facebook，她虽然比bug追踪系统的功能少，但更友好和强大。</p>

<p>她让交流变的更加简单。我们可以在里面讨论各种问题。可以是bug，可以是新的功能，也可以是一些分享，以及任何值得讨论和留下记录的东西。</p>

<ul>
<li>你可以把任务分配给某个人，这样就很清楚地知道谁正在做这个事。</li>
<li>你可以创建不同的标签，给某个issue添加标签进行分类管理。这样在你点某一个标签的话，属于这个标签的所有issue都会显示出来。</li>
<li>你还可以创建milestone，将多个issue加入到这个milestone下面，每关闭一个issue，milestone的进展就更进一步，这样大家会很清楚项目的进展情况，并且都会朝着这个目标努力。</li>
</ul>


<p>另外呢，当你引用其它issue的时候也非常方便，比如说我想引用issue 117，我只需要写“#117”就可以了。</p>

<p>issues这个功能呢，用文字而不是用语言交流。这里文字比语言有很大的优势：</p>

<ul>
<li>有价值：语言交流一般不会有时间把逻辑组织的很好，很多随机的话是没什么价值的。而用文字，你有时间思考，就可以组织起很好的逻辑。</li>
<li>有记录：大家的交流内容都在网上，所以就算你出去玩一会，回来也能跟上讨论的节奏，不会受工作地点的限制。而且之后你想回顾讨论的过程也很方便，往往有时候讨论的过程更有启发，issues还提供了各种查找的方式，可以通过状态（open/close），标签（tag），分配任务的人进行查找，还支持全文搜索。他比会议记录也要强大的多了，你在会议上记录的都是你当时认为重要的东西，而且经常记录的只是会议的一少部分，而你1个月之后，想回顾的话，你很可能发现，当时的很多有价值的东西自己没有记录。</li>
<li>友好：你在issue上面讨论问题，可以随意@别人而不用担心打扰别人的工作，别人看到了，会在他有空的时候回复你的。但是注意，不要@错了。（peter的例子。。。）</li>
</ul>


<h3>Wiki</h3>

<p>大家达成共识的东西就可以形成wiki。项目中的每个人都可以新建页面，编辑页面，同时还可以查看编辑的历史。我们的wiki上主要分了2类，一类是硬性纲领性的，一类是技巧总结性的。对于硬性纲领性的东西，就是大家要严格遵守的东西，比如。。。另一类技巧总结性的，主要是非硬性规定的，一般是技巧和经验的总结，比如我们的网站会让一些工程师录制一些教学类的视频，那我们就会有一个“视频课程制作须知”的wiki页面。</p>

<p>我们一般通过2种方式进行编辑：</p>

<ul>
<li>在页面上直接编辑；</li>
<li>本地编辑。因为wiki页面本身就是一个git的repo，所以可以用git来管理。可以git clone下来，在本地用文本编辑器进行编辑，支持很多种格式，我们一般用markdown格式进行编辑。</li>
</ul>


<p>wiki就形成了知识共享，知识传递上的一种异步。比如，我们团队有个新成员加入，我们的项目是开源的，欢迎任何人参与进来，他对贡献代码的流程不是太清楚，那我们就让他去看wiki中的“pull request的流程”那个wiki页面，有问题，可以到issue上提出，然后一起讨论。这样就不用每次有新成员加入，都要给他讲一遍这个流程了，一是可以节省很多的时间，二是它是异步的。</p>

<p>还有这个wiki系统是开源的，是一个叫gollum的项目，gollum这个词是指环王里的那个小怪物，得到魔戒后嗓子里发出咕噜的声音。github的wiki就是用gollum构建的。如果你想构建自己项目的wiki系统，可以使用gollum，项目的地址：https://github.com/gollum/gollum。</p>

<h2>人</h2>

<p>这里是github的一些数据，github每天：</p>

<ul>
<li>10k 人加入github；</li>
<li>140GB新数据被上传；</li>
<li>125k 个软件库被更新；</li>
<li>10k 人push他们的第一个项目；</li>
<li>25k 个软件库被创建；</li>
<li>7k pull requests 被发送；</li>
</ul>


<h3>github是如何招人的</h3>

<p>github现在有153名员工，分布在世界的各个地方。要想让异步玩的转，不只是有好的流程，好的工具，你还需要合适的人。我的理解，合适的人就是你认为重要的东西，对方也认为重要，那就是合适。比如说，github认为公司里不应改有经理这种单纯的管理角色，如果你也认同的话，那你们各自对双方都会有个好印象。</p>

<p>博客呢，可以反映你的人品，你是如何看世界的，你对很多问题的观点是什么，因此博客是一种展现自己的方式，宣传自己的方式，可以让别人很容易的了解你。当然展现自己的方式，不只限于博客，你可以参加一些活动，在会议上做演讲，组织一些活动。但你可以用博客记录这些经历和感受，并把这些宝贵的财富分享给所有人。</p>

<p>你在github的贡献都可以用数据来说明。比如在我的个人主页，可以看到我参与项目的情况，我贡献了哪些项目，能看到我最受欢迎的项目。</p>

<p>我一共有多少个repo。在往下呢，可以看到我贡献的总数，125个，这个数量等于commit+PR+报告的issue。还可以看到我的连续都有贡献的天数是5天，当前连续贡献天数是2天。在往下，默认显示的是我这一周的具体贡献，我这一周push了3个commit，提交了4次pull request，报告了3个issue。如果别人对我的哪个贡献感兴趣的话，点进去这个链接，就可以看到更具体的信息，比如说了些什么，修改了哪些代码。这对于招聘方来说，真是方便极了，我的能力一目了然。</p>

<h3>Optimizing For Happiness:</h3>

<p>这是github的创始人tom说的一句话： I&#8217;m a hacker; I&#8217;m happy when I&#8217;m building things of value, not when I&#8217;m writing a business plan filled with make believe
numbers.</p>

<p>gihtub不为钱工作，而为快乐工作的好处是：</p>

<ul>
<li>不用做很多讨好投资人的事情，比如说做财务支出计划，做项目计划。</li>
<li>不会使自己处于不利的地位。当你为钱工作，你会花很多时间和投资人接触，说服他们给你投资，而你越是着急，就越让自己处于不利的地位。最后你会发现，你得到的可能只是自己的笑容比平常更多了。而为快乐工作，当github成功的时候，投资人自动找上门来，主动要求投资。</li>
<li>可以不用投资人的钱。现在的创业成本越来越低，以前主要考虑的硬件的成本现在已经基本可以忽略不计了，github当时只投资了几千美金用来支付一些法律服务上的费用。</li>
</ul>


<p>因此，在github，不用开会来解决问题，没有工作时间和工作天数的规定，不会限制你休假的天数和病假的天数。也不会有经理这种单纯的管理者或者组织机构图这类东西。没有着装规定，没有报销费用审计和HR。</p>

<p>github做决定是基于争论后而达成的共识，而不是一定由某个特定的人说的算。他们的董事会开在酒吧而不是一个门关的很严的会议室。</p>

<p>他们做这些，是因为，他们为快乐工作。</p>

<h3>Product Is The By-Product</h3>

<p>产品只是公司的副产品。有了好的文化，吸引到一流的人才。在这种优良的土壤和环境的培育下，才能“生长”出好的产品。</p>

<p>最后我希望大家能在github上创建或者参与一些自己感兴趣的项目，发挥你的创造力，感受异步工作带来的快乐，并可以带给世界一些美好的东西。然后你可能发现，这些项目会带给你一种自豪感，一种分享的欲望，你会感觉他比讨论哪个名人每天在微薄上说什么了更有吸引力，比读一些不疼不痒的新闻更有收获，也比关注一些愤青的言论更有教育意义。甚至比在周末的下午听的演讲更有趣。</p>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fork You! Github]]></title>
    <link href="http://luckyyang.github.com/blog/2013/03/23/fork-you-github/"/>
    <updated>2013-03-23T22:52:00+08:00</updated>
    <id>http://luckyyang.github.com/blog/2013/03/23/fork-you-github</id>
    <content type="html"><![CDATA[<p>3月23号，我和peter被邀请<a href="http://idev.51qiangzuo.com/">iDev</a>做关于github的讲座，下面是我演讲的内容。</p>

<blockquote><h3>幻灯片在这里：</h3></blockquote>

<script async class="speakerdeck-embed"
data-id="c4bc0ed075aa0130a2171231392f4138" data-ratio="1.33507170795306"
src="http://luckyyang.github.com//speakerdeck.com/assets/embed.js"></script>


<p>大家好，通常周六下午的这个时间，我正在操场，和一群不认识的人打篮球，然后输得筋疲力尽回家。</p>

<p>我今天演讲的题目是“fork you， github”，fork在github中是指copy一份别人的代码到自己的代码库中。而我演讲标题中的这个fork主要是想fork
github文化上的一些东西，谈一谈github的文化和工作方式，看一看哪些东西我们可以吸收和借鉴。这里我想用2个字来阐述：
<strong>异步</strong> ，这两个字也是我演讲的核心。这个演讲适合所有对github感兴趣的人：</p>

<!-- more -->


<ul>
<li>如果你还不是很了解github，你或许想知道现在为什么人们都在谈github；</li>
<li>如果你正在运营一个公司或者领导一个团队，你或许想知道营造一个什么样的文化，才能吸引到更多的人才，创造出伟大的产品；</li>
<li>还有如果你对github的文化和工作方式已经有了一定了了解，你或许还想知道“没有经理，没有会议，没有产品开发期限”是如何玩的转的。</li>
</ul>


<p>我叫刘吉洋，我是一个很乐观的人，我最喜欢打篮球。luckyyang是我github上的用户名，为了让100米外的人能看清，我单独做了一张幻灯片，你可以follow我，或者关注我的项目。我和peter一起合作好奇猫这个项目的过程，可以说是屌丝逆袭的过程。当时我刚辞职不久，之前在一个大公司工作，找不到未来的方向。辞职后，我打算学习rails，从事web开发，以后做个自由职业者。有一天，peter来我家玩，聊着聊着，他突然对我说：要不你就加入我这个项目，我们一起创业。我当时认真思考了0.2秒，然后故作镇定的说：没问题，我可以参与这个项目。其实我的内心是这样的：（伸手握拳状）yes！我知道这是一个愚公移山的项目，很可能失败，但我可以很清楚的看到，这段经历会使我终身受益。</p>

<h3>举手：</h3>

<p>在场的各位有多少用过github的？有多少不知道github的？有多少用过git的？有多少觉得自己这两个东西用的都不是太熟练的（我也举手，举双手）？现在在场的有团队在用github做协作开发的么？</p>

<p>好，谈异步，我会从3个方面来说：工作方式，工具和人。</p>

<h2>工作方式</h2>

<p>github工作方式的异步，有三点：工作地点，工作时间和工作强度。</p>

<ul>
<li>工作地点可以随意选择，github有2/3的员工是远程工作的。在家里，或者在世界的各地。</li>
<li>工作时间自由支配，可以早上七点，也可以下午一点开始工作，自由支配，只要你效率高。</li>
<li>工作强度，根据自己的情况安排，只要你能写出好代码。</li>
</ul>


<p>关于工作方式，可以用这两点来解释：</p>

<h3>Hours Are Bullshit</h3>

<p>多长时间？我们在大学的时候就开始喜欢讨论时间长短的问题了，或者简单说长短的问题。现在到了工作上，我们仍然在讨论这个多长时间的问题，虽然讨论的焦点不同了，但是我的结论是一样的：这种讨论没有意义。</p>

<p>对于工厂来说，生产线运行的越久，工人工作的时间越长，那么生产的产品就越多，创造的价值也就更大。但是编程是一件创造性的劳动，需要集中精力，有个好的状态，才能写出高质量的代码。我听到过很多次有人说“我这几周每天都工作到凌晨1点”或者“我每天只睡5个小时”一类的话，其实这些话说明不了什么，说明不了你写了多好的代码，说明不了你的效率有多高，但基本可以说明的是，你的身体需要好好休息一下了。
他们说这些话的目的可能只是随口说说，没有炫耀的成分。但是这个话题还是很值得去聊一聊的，就拿我自己来说，我的身体素质是什么样的呢：</p>

<ul>
<li>我大学四年一直都是我们班体育委员，每学期的体育成绩都是优秀，接近满分；</li>
<li>大学时参加运动会也都会有名次；</li>
<li>工作后每周一般也要锻炼至少2次；</li>
</ul>


<p>所以我现在的习惯是，如果一周不让我玩两次的话，我感觉自己浑身不自在。</p>

<p>你们觉得我的身体素质应该还可以吧，但是我对每周工作多少小时一直都是很迷惑的，因为经常听到或者看到一些报道“我每周工作100小时，连续3个月，工作效率总是很高”或者“我是如何做到每天只睡4个小时的”。
而我从来，从来都没有做到过连续工作15小时这一类的事情，也做不到，所以经常觉得很失败。但现在我想对这些报导说，都是胡扯。就算他们能一个月都保持那样的效率，我绝对不相信他们可以一直持续的保持下去。</p>

<p>我有过在公司工作3年的经验，我只能说我总体上效率最好的时候可能只有每天6个小时，或者更少，每天上午9点到12点，我可以工作一阵，中午我必须要睡上半个小时，不然整个下午就好像梦游一样。午睡之后，下午2点到5点继续工作，然后剩下的半个小时，我会想健身的东西都带齐了没？上次自由泳游的不错的那个姑娘这次还能不能看到呢？而且从这一点上来说，我觉得也是KPI（绩效考核）对我有用的唯一一点，就是我不用因为工作时间少而感觉良心上过不去，我唯一要承担的就是我每个月的奖金少拿点。</p>

<p>我一般如果熬夜一次之后，都需要2天的时间才感觉身体完全恢复到很健康的状态。而且熬夜的状态，就感觉随着时间的流逝，自己的精神一点点被掏空了的感觉，根本谈不上什么创造性可言。</p>

<p>让我们再回味一下“每周工作100个小时。。。”这种话，这是一种典型的“生产线”思维方式，就是把工作任务的完成程度简单的用时间来衡量，工作的时间长，我做的工作就多，工作的时间长，我就超前于你，我才更有可能成功。</p>

<p>所以我对这种情况得出了2个结论：</p>

<ul>
<li>要么，他们从事的工作是“生产线”式的工作；</li>
<li>要么，他们就是在扯蛋。</li>
</ul>


<p>还有一点，对于编程这种创造性的劳动，人们关心工作时间的原因，是因为它是绩效考核的一部分，经理们喜欢用时间来作为考核标准的原因是，对于他们来说，用时间作为丈量标准比较简单，看起来也一视同仁。而用“代码写的怎么样，工作效率如何”这样的标准来衡量的话，太难了。所以当一个公司对时间关心更多的时候，他的员工也会这样。</p>

<p>其实，对于工作时间的探讨不是没有意义，但是其实我们关心的不是每周我们到底要工作多少时间，而关心的是如何实现工作和生活的平衡，在这个平衡的基础上，创造更多的价值。而对于如何实现这个平衡，没有一个万能的公式，你只有自己去多次尝试，给自己反馈，然后找到一个平衡的状态。最后，当你达到这个平衡状态之后，我想你更愿意和别人分享你做了什么让自己兴奋的项目，而不是说，我又搞了个通宵。</p>

<h3>Real Artists Ship</h3>

<p>真正的高手都是以是否能完成好的作品为目标进行创作的。写代码也是和艺术创作类似的活动，你无法强迫自己的灵感一定会在早9晚5这段时间出现。github让你自己决定适合自己的工作方式，他们有的早上7点就到公司工作，有的下午3点才到公司，还有的就坐自己家里工作，因为他们觉得在家里工作更能进入状态。</p>

<p>最终他们的这种灵活的工作方式，发现员工投入到工作中的时间更长了，因为你营造的这种氛围，让员工感觉很兴奋，也更愿意投入到创造当中。而创造的过程，也是非常高效的。</p>

<p>这点在我身上就是一个例子。我现在的工作时间，当然我是指效率高的时间，效率不高我是不会工作的，由原来的&lt;=6小时变成了现在的>=8小时，而且我还有时间学习吉他。</p>

<p>所以我也留给大家一个问题思考：就是现在的每周40个小时工作制是谁提出的？在什么社会环境下提出的？是否合理？</p>

<h2>工具</h2>

<p>工具确保了异步的工作流程，主要有三个工具：pull request，issues和wiki。</p>

<h3>Pull Request</h3>

<p>pull request（PR）相当于一个代码审核（review）系统。可能大多数人都是在参与开源项目时使用这个功能：fork项目（也就是把项目做了一个拷贝）->修改代码->发送PR给项目的维护者（maintainer）。这种流程是在不同的repo下面进行的，repo你可以简单理解为整个项目的代码，因为你fork之后，你其实是相当于把这个项目做了一个copy到你的代码库中，而对于团队内部开发来说，其实完全可以省略fork这个过程，直接在同一个repo下面开发，下面我就大概讲一下我们是如何使用PR的（我们项目repo的名字叫onestep）。</p>

<ol>
<li>首先代码的维护者peter会授予我写权限。</li>
<li>然后我在本地克隆（clone）这个repo，也就是把代码下载到本地。</li>
<li>我新建分支（branch），比如叫please_merge_me，然后修改代码，测试没有问题后把代码push到github上的please_merge_me分支。</li>
<li>最后发送PR给主（master）分支。</li>
<li><p>与代码有关的人在他有空时就会参与讨论，当：</p>

<ul>
<li>他受所修改代码影响时；</li>
<li>某个人对这次修改感兴趣时；</li>
</ul>
</li>
<li>如果代码修改的没问题的话就可以直接将代码合并（merge）到主（master）分支上。</li>
<li>clean</li>
</ol>


<p>PR和之前的把人叫过来做代码审核的方式相比，就好像是钻木取火和用打火机的区别。</p>

<p>有多少人不喜欢开会的？举手。不举手的都是领导。</p>

<ul>
<li><p>省时
通过PR，就不用把别人叫过来做代码审核了，你把他叫过来之后，你还要在一边花时间等着他看你的那些修改。
也省去了开会的麻烦，我们都有过不情愿过去开会的经历吧，而可能当时你的创造力正井喷。在PR上，不需要通过开会解决问题，我们可以就这个PR进行讨论，甚至可以就某一行或某一块代码进行讨论，而且讨论的内容都是大家经过思考才发布上去的，而不是经常毫无准备的就过去开会。</p></li>
<li><p>省力
开会很耗费体力和脑力的过程。</p></li>
</ul>


<h3>Issues</h3>

<p>issues相当于一个简化版的bug追踪系统+facebook，她虽然比bug追踪系统的功能少，但更友好和强大。
她让交流变的更加简单。我们可以在里面讨论各种问题。可以是bug，可以是新的功能，也可以是一些分享，以及任何值得讨论和留下记录的东西。</p>

<ul>
<li>你可以把任务分配给某个人，这样就很清楚地知道谁正在做这个事。</li>
<li>你可以创建不同的标签，给某个issue添加标签进行分类管理。这样在你点某一个标签的话，属于这个标签的所有issue都会显示出来。</li>
<li>你还可以创建milestone，将多个issue加入到这个milestone下面，每关闭一个issue，milestone的进展就更进一步，这样大家会很清楚项目的进展情况，并且都会朝着这个目标努力。</li>
</ul>


<p>另外呢，当你引用其它issue的时候也非常方便，比如说我想引用issue 117，我只需要写“#117”就可以了。</p>

<p>issues这个功能呢，用文字而不是用语言交流。这里文字比语言有很大的优势：</p>

<ul>
<li>有价值：语言交流一般不会有时间把逻辑组织的很好，很多随机的话是没什么价值的。而用文字，你有时间思考，就可以组织起很好的逻辑。</li>
<li>有记录：大家的交流内容都在网上，所以就算你出去玩一会，回来也能跟上讨论的节奏，不会受工作地点的限制。而且之后你想回顾讨论的过程也很方便，往往有时候讨论的过程更有启发，issues还提供了各种查找的方式，可以通过状态（open/close），标签（tag），分配任务的人进行查找，还支持全文搜索。他比会议记录也要强大的多了，你在会议上记录的都是你当时认为重要的东西，而且经常记录的只是会议的一少部分，而你1个月之后，想回顾的话，你很可能发现，当时的很多有价值的东西自己没有记录。</li>
<li>友好：你在issue上面讨论问题，可以随意@别人而不用担心打扰别人的工作，别人看到了，会在他有空的时候回复你的。但是注意，不要@错了。（peter的例子。。。）</li>
</ul>


<h3>Wiki</h3>

<p>大家达成共识的东西就可以形成wiki。项目中的每个人都可以新建页面，编辑页面，同时还可以查看编辑的历史。我们的wiki上主要分了2类，一类是硬性纲领性的，一类是技巧总结性的。对于硬性纲领性的东西，就是大家要严格遵守的东西，比如。。。另一类技巧总结性的，主要是非硬性规定的，一般是技巧和经验的总结，比如我们的网站会让一些工程师录制一些教学类的视频，那我们就会有一个“视频课程制作须知”的wiki页面。</p>

<p>我们一般通过2种方式进行编辑：</p>

<ul>
<li>在页面上直接编辑；</li>
<li>本地编辑。因为wiki页面本身就是一个git的repo，所以可以用git来管理。可以git
clone下来，在本地用文本编辑器进行编辑，支持很多种格式，我们一般用markdown格式进行编辑。</li>
</ul>


<p>wiki就形成了知识共享，知识传递上的一种异步。比如，我们团队有个新成员加入，我们的项目是开源的，欢迎任何人参与进来，他对贡献代码的流程不是太清楚，那我们就让他去看wiki中的“pull request的流程”那个wiki页面，有问题，可以到issue上提出，然后一起讨论。这样就不用每次有新成员加入，都要给他讲一遍这个流程了，一是可以节省很多的时间，二是它是异步的。</p>

<p>还有这个wiki系统是开源的，是一个叫gollum的项目，gollum这个词是指环王里的那个小怪物，得到魔戒后嗓子里发出咕噜的声音。github的wiki就是用gollum构建的。如果你想构建自己项目的wiki系统，可以使用gollum，项目的地址：<a href="https://github.com/gollum/gollum%E3%80%82">https://github.com/gollum/gollum%E3%80%82</a></p>

<h2>人</h2>

<p>这里是github的一些数据，github每天：</p>

<ul>
<li>10k 人加入github；</li>
<li>140GB新数据被上传；</li>
<li>125k 个软件库被更新；</li>
<li>10k 人push他们的第一个项目；</li>
<li>25k 个软件库被创建；</li>
<li>7k pull requests 被发送；
还有另外一些数据。。。</li>
</ul>


<h3>github是如何招人的</h3>

<p>github现在有153名员工，分布在世界的各个地方。要想让异步玩的转，不只是有好的流程，好的工具，你还需要合适的人。我的理解，合适的人就是你认为重要的东西，对方也认为重要，那就是合适。比如说，github认为公司里不应改有经理这种单纯的管理角色，如果你也认同的话，那你们各自对双方都会有个好印象。对于我们这个项目，如果你也觉得是和我们一类的人，我们热烈欢迎你来找我们聊聊。</p>

<p>博客呢，可以反映你的人品，你是如何看世界的，你对很多问题的观点是什么，因此博客是一种展现自己的方式，宣传自己的方式，可以让别人很容易的了解你。当然展现自己的方式，不只限于博客，你可以参加一些活动，在会议上做演讲，组织一些活动。但你可以用博客记录这些经历和感受，并把这些宝贵的财富分享给所有人。</p>

<p>你在github的贡献都可以用数据来说明。比如在我的个人主页，可以看到我参与项目的情况，我贡献了哪些项目，能看到我最受欢迎的项目，现在已经有一个人加star了，而且我可以很确定的告诉你们，这个人不是peter，也不是我妈。</p>

<p>我一共有多少个repo。在往下呢，可以看到我贡献的总数，125个，这个数量等于commit+PR+报告的issue。还可以看到我的连续都有贡献的天数是5天，当前连续贡献天数是2天。在往下，默认显示的是我这一周的具体贡献，我这一周push了3个commit，提交了4次pull
request，报告了3个issue。如果别人对我的哪个贡献感兴趣的话，点进去这个链接，就可以看到更具体的信息，比如说了些什么，修改了哪些代码。这对于招聘方来说，真是方便极了，我的能力一目了然。</p>

<h3>Optimizing For Happiness:</h3>

<p>这是github的创始人tom说的一句话： I&rsquo;m a hacker; I&rsquo;m happy when I&rsquo;m building things of value, not when I&rsquo;m writing a business plan filled with make believe numbers.</p>

<p>gihtub不为钱工作，而为快乐工作的好处是：</p>

<ul>
<li>不用做很多讨好投资人的事情，比如说做财务支出计划，做项目计划。</li>
<li>不会使自己处于不利的地位。当你为钱工作，你会花很多时间和投资人接触，说服他们给你投资，而你越是着急，就越让自己处于不利的地位。最后你会发现，你得到的可能只是自己的笑容比平常更多了。而为快乐工作，当github成功的时候，投资人自动找上门来，主动要求投资。</li>
<li>可以不用投资人的钱。现在的创业成本越来越低，以前主要考虑的硬件的成本现在已经基本可以忽略不计了，github当时只投资了几千美金用来支付一些法律服务上的费用。</li>
</ul>


<p>因此，在github，不用开会来解决问题，没有工作时间和工作天数的规定，不会限制你休假的天数和病假的天数。也不会有经理这种单纯的管理者或者组织机构图这类东西。没有着装规定，没有报销费用审计和HR。</p>

<p>github做决定是基于争论后而达成的共识，而不是一定由某个特定的人说的算。他们的董事会开在酒吧而不是一个门关的很严的会议室。</p>

<p>他们做这些，是因为，他们为快乐工作。</p>

<h3>Product Is The By-Product</h3>

<p>最后呢，产品只是公司的副产品。有了好的文化，吸引到一流的人才。在这种优良的土壤和环境的培育下，才能“生长”出好的产品。</p>

<p>最后我希望大家能在github上创建或者参与一些自己感兴趣的项目，发挥你的创造力，感受异步工作带来的快乐，并可以带给世界一些美好的东西。然后你可能发现，这些项目会带给你一种自豪感，一种分享的欲望，你会感觉他比讨论哪个名人每天在微薄上说什么了更有吸引力，比读一些不疼不痒的新闻更有收获，也比关注一些愤青的言论更有教育意义。甚至比在周末的下午听的演讲更有趣。</p>

<p>谢谢。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[那不是你的错]]></title>
    <link href="http://luckyyang.github.com/blog/2013/01/19/it-is-not-your-fault/"/>
    <updated>2013-01-19T23:53:00+08:00</updated>
    <id>http://luckyyang.github.com/blog/2013/01/19/it-is-not-your-fault</id>
    <content type="html"><![CDATA[<p><img src="http://luckyyang.github.com/images/lonely_back.jpg" alt="it_is_not_your_fault" width="500"></p>

<p>前几天，一个朋友向我诉苦，说她的上司对她说“你处理问题考虑欠周全，你经验少。。。”等等这类的话。她倒不是一个喜欢抱怨的人，反倒是会经常会带给我欢乐。我意识到这种事肯定发生过不止一次了，她被“压迫”的太久，从她目前的状态就差不多能看出来一些，我发现她少了刚毕业时的那种单纯，这也是我最喜欢的人的一种品质；长发现在剪成了短发；每天为工作奔波，加班到9点后是常态；上司不认可她的表现即使她做的还不错；吸烟，很多。我马上就愤青了，说了一堆愤慨的话比如“她这是对你的人格侮辱啊啊啊啊”，之后她感觉好点了，而我，感觉爽多了。</p>

<!-- more -->


<p>我不喜欢抱怨，我也知道我的那么多抱怨不能帮她解决问题，抱怨只能让她感觉好点，但是，无法帮她解决她的问题和困惑。抱怨只能让她的状态从负回归到接近0，但是无法变成正，我想帮她解决这种困境，不想再让社会多出一个“专业人士”，更不想看着她的美好的品质慢慢消失。</p>

<p>我说那么多，可能也是一直我想说出来的，我倒是没有那样的上司，但是类似的例子我遇到的太多，我知道那种感觉，你不会觉得是别人的问题，你会从自己身上找问题，但是你抓心挠肺左思右想还是不知道应该怎样才能让自己更快的强大，反而让自己焦躁和更加迷茫，这种迷茫让我在成长的过程中不止所措，让我一直在反复地问自己：真是我的问题么？</p>

<p>我没有完全否定她上司的观点，对于一个处于成长期的人来说，经验是不多，处理问题也不会那么老道。但是你，请你用人能听懂的话来讲，也就是就事论事，如果你不懂的话，我不会说你理解能力这么差呢，我会很耐心的告诉你，你可以说：“这件事最好考虑1,2,3,4,5点，你只考虑了5,4,3点，以后遇到类似的问题应该。。。（省略号的意思是具体怎么做），遇到不同的问题应该。。。”你这样做，我才会爱你多一点。</p>

<p>这样的例子我随便就可以给你举出来几个：</p>

<ol>
<li>你把一件事情说错了，别人经常会说你怎么这么笨呢。</li>
<li>你某天比较兴奋，说了很多话，别人会说你怎么这么偏激呢。</li>
<li>有时候你想把事情做的细致做的好一点，别人说你太讲究了。</li>
<li>你希望就某事讨论一下时，对方说你太较真。</li>
</ol>


<p>生活中的这些例子我们往往会忽视，它会我们的生活影响不是很大，因为不涉及到利益关系。但工作上，是有利益关系和等级之分的，如果你凭借你的经验你的优势你的等级随便对别人的个人品质进行负面评价的话，我觉得就是人格侮辱。最后我和她说，这不是你的问题你不用苦恼，以后遇到这种问题，让她感觉到你在以人的方式和她交流，自信而平和地问：“麻烦您能具体的告诉我，我具体是哪里做的不好么？”</p>

<p>那不是你的错，那不是你的错，那不是你的错。。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[你需要多一点个性]]></title>
    <link href="http://luckyyang.github.com/blog/2013/01/19/you-need-more-personal-character/"/>
    <updated>2013-01-19T22:45:00+08:00</updated>
    <id>http://luckyyang.github.com/blog/2013/01/19/you-need-more-personal-character</id>
    <content type="html"><![CDATA[<p><img src="http://luckyyang.github.com/images/personal_character.jpg" alt="personal_character" width="500"></p>

<p>如果3年前有人问我，如何让生活过得有意义，我会很认真地和他说：“要有理想，思考自己喜欢的东西，追求自己的方向，探索一条适合自己的路。”而现在有人问我如何让生活过得有意义，我会笑着和他说：“人活着得有个性！”然后他问我如何才能变得有个性的话，我会很认真地和他说：“要有理想，思考自己喜欢的东西，追求自己的方向，探索一条适合自己的路。”</p>

<!-- more -->


<p>开玩笑！</p>

<p>如果现在的我对3年前的我说出上面的话，我也一定会尊敬地毫不犹豫地不带任何表情地回答说：“您可真幽默！”</p>

<p>你说个性不就是烫个黄毛一边头发长一边头发短长的一边要遮住半边脸，牛仔裤一定要漏无数个洞，耳朵上一定要扎个耳孔，说话一定是一种很大气的语气，根本不知道细节是哪国的文字，各种新潮的东西于一身。。。</p>

<p>我原来一直觉得个性一个词是有点中性偏贬义的词，个性就意味着你与别人不同，就意味着你做的事情有违大家的共有观念。</p>

<p>现在如果谁说我有个性，我会很高兴。我发现现在的时代，不是你不想个性，有时候是大家没时间去个性，因为你太忙了。在这个信息泛滥的社会，每天的信息多到令你发指：早晨关闭吵人的闹钟后第一件事就是看看昨晚发的微薄有人@我没有（闹钟提前设定5分钟，以便发条微薄说“一杯蜂蜜水，又开始啦美好的一天，啦啦啦”），上班的路上一定要一边大声地听着音乐一边继续刷微博和看新闻，到公司的前半个到一个小时也不是用来工作的，要关注下业内的资讯和最新的电子产品信息。这个时候的个性可能是谁的脑残粉最多，谁暴的料最大，谁的指甲盖大的头像嘴嘟的最可爱。</p>

<p>但我现在觉得，有个性不是你外表夸张才叫个性。你追求自己的理想，实现自己的价值，创造有的产品，这就是个性。个性不是单纯的不同，而是自我认识和自我实现之后做达到的一种状态。如果你想当一个优秀的歌唱者，你肯定会去学习一些优秀的人，然后不断练习和调整，最后找到自己的风格，这就是你的个性。很多东西都可以称作个性，别人都用智能手机而你不用，是个性；别人过生日出去大酒大肉卡拉OK而你拿个小本子站在寒风中收集祝福，是个性；别人对陌生人都一副防备的表情，而你会平等微笑地对待每一个人，如果是骗子大不了转身就走嘛，这也是个性；你有勇气放弃当前的既得，为实现自己的价值而走上一条新的不熟悉的充满挑战的路，也是个性。</p>

<p>多一点个性吧，你的生活肯定会多姿多彩。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UBUNTU 12.04下解决打开txt文件乱码问题]]></title>
    <link href="http://luckyyang.github.com/blog/2013/01/19/how-to-open-txt-file-in-ubuntu/"/>
    <updated>2013-01-19T21:38:00+08:00</updated>
    <id>http://luckyyang.github.com/blog/2013/01/19/how-to-open-txt-file-in-ubuntu</id>
    <content type="html"><![CDATA[<p><img src="http://luckyyang.github.com/images/ubuntu_rain_in_baires.png" alt="ubuntu_rain_in_baires" width="500" ></p>

<p>前几天因为一点事不得不用下windows，然后就在里面记了点东西，之后拷贝到ubuntu后发现乱码，开始也懒得去管它，可放在那始终是个问题，而且我最近正好要用到文档里的内容，就在网上搜索了下，基本的解决方法是这样的：</p>

<!-- more -->


<blockquote><ol>
<li>终端输入gconf-editor调出gconf-edit(前面不需要加Sudo)</li>
<li>依次点开 apps->gedit-2->preferences－＞encodings 中的auto-detected</li>
<li>在双击弹出对话框中加入GB18030，GBK，GB2312,然后将GB18030,GB2312移到最上</li>
</ol>
</blockquote>

<p>但是这个方法在我这不行，之前我用vim切换编码也试过，行不通。</p>

<p>怎么办呢？</p>

<p>试试用浏览器吧，最后解决了，我把步骤说下吧，如果你正好有和我一样的问题并且搜到了这里，你也可以试一下：</p>

<ol>
<li>将文件的后缀.txt改为.html，这样浏览器就可以按html来读了。比如你的文件名是&#8221;解决个编码问题我容易么.txt&#8221;，改为&#8221;解决个编码问题我容易么.html&#8221;。</li>
<li>vim或者别的编辑器打开并编辑文件，在文件的最顶端加入：

<blockquote><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;&lt;meta charset="GB18030"&gt;&lt;/head&gt;
  &lt;body&gt;
    &lt;pre&gt;
</code></pre></blockquote></li>
<li>在文件的最末尾加入：

<blockquote><pre><code>    &lt;/pre&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre></blockquote></li>
<li>用浏览器打开文件，应该就可以正常显示中文了。</li>
<li>新建一个文件，把浏览器中的中文拷贝进去。</li>
</ol>


<p>嘿，解决了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在贵州古寨]]></title>
    <link href="http://luckyyang.github.com/blog/2012/12/24/zai-gui-zhou-gu-zhai/"/>
    <updated>2012-12-24T09:11:00+08:00</updated>
    <id>http://luckyyang.github.com/blog/2012/12/24/zai-gui-zhou-gu-zhai</id>
    <content type="html"><![CDATA[<p><img src="http://luckyyang.github.com/images/guzhai.jpg" alt="古寨" width="500" ></p>

<p>此时我正在贵州侗寨一个温暖的被窝里，手是热的，脚也是热的。这几天一直在各个寨子之间晃悠，之前预想的温暖天气从来没有碰到过，大部分时间都是在外面刺骨的湿冷中度过，因此每次手脚热起来，手脚都有点异样的感觉。冷容易让一个人变得孤单，也会让我变得很懒，所以到“世界末日”的前一天晚上，才掏出自己的本子，写点东西。</p>

<!-- more -->


<p>这趟旅行我遇到很多人，有些人让我印象深刻。有火车上最终在云南大理找到自己的理想的河北小伙儿，给我讲述着那里的包容和慢生活的美好；有在北京住了6年的而最终回到家乡西江千户苗寨的客栈老板，给我讲述着苗寨传统文化被商业社会的慢慢侵蚀，以及他去其它古寨看到传统文化还在时而流出的眼泪；还有革家族大姐给我们展示的一百多年前的蜡染布和热情地招待我们喝她自酿的米酒。</p>

<p><img src="http://luckyyang.github.com/images/dali.jpg" alt="追逐梦想的人" width="500" ></p>

<p>我喜欢那个河北小伙儿的生活状态，我佩服他的选择：放弃了在北京几年的工作，到东北森林里去寻找自我，去云南继续探索自己的道路，不在乎被人的眼光，不顾家人的反对，选择留在了离家乡很远的大理，而之前他对大理的印象不过是《天龙八部》中段誉的身份了。此时我遇到他，他已经在大理住了十个月，皮肤被晒的黝黑，四周头发剪的很短，只留了一撮很长的头发在头顶扎起来，穿着带皮毛的衣服和带着民族风的项链。如果不和他聊，我以为他是一个少数民族。他给我讲，他很喜欢那里的生活，人和人之间很友好，生活节奏慢，生活幸福是人们正在做的事情而不是一种追求，人们不会用各种尺子衡量你，每个人不一定很有钱却对生活很满足。</p>

<p><img src="http://luckyyang.github.com/images/kezhan.jpg" alt="客栈" width="500" ></p>

<p>我喜欢客栈老板对传统古寨文化的诗人般的爱。听到侗歌，他可以把自己的吉他扔入河中，因为他觉得那才是真正的音乐。看到苗家女孩走入雾中的山里，他会大喊“你们是神仙吗？不是神仙为何会在这神一样的地方？” 遇到有个女孩对他唱情歌，他的泪不自觉地流了下来，在商业气息浓厚的地方生活的他，已经不知道如何回应。</p>

<p><img src="http://luckyyang.github.com/images/gejia.jpg" alt="革家" width="500" ></p>

<p>我喜欢革家族大姐淳朴的笑容。在那里，我喝了很多的酒，感受着辣椒和酒精给身体带来的热度和刺激。她对人诚实和热情，不会说自己多么热爱自己的文化和传统，因为这种文化和传统已经深入她的骨髓，反映在她的一言一行中，她只需要继续她的生活，就是一副最美的画面。</p>

<p>我在想，他们会怎么定义成功呢，也许在他们的思维里根本没有成功这个词，或者不需要，他们知道生活的幸福才是最重要的。我也许会再次去那个地方，也许会去那里生活一段时间。也许不会，但无论会不会，在我心中都多了一片净土，让我在面临选择的时候，天平的这一端都多了一点重量；让我对生活多了一份淡然，少了一些迷茫；让我能微笑的面对生活，更多一点微笑。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如果你不是专业设计人员]]></title>
    <link href="http://luckyyang.github.com/blog/2012/12/12/ni-de-she-ji-you-mei-you-zhe-xie-wen-ti/"/>
    <updated>2012-12-12T11:29:00+08:00</updated>
    <id>http://luckyyang.github.com/blog/2012/12/12/ni-de-she-ji-you-mei-you-zhe-xie-wen-ti</id>
    <content type="html"><![CDATA[<p><img src="http://luckyyang.github.com/images/robin_williams_book.jpg" alt="Robin Williams" width="500"></p>

<h3>设计离我们很远么？</h3>

<p>说起设计，好像离我们很遥远的事。至少我以前一直这么认为的：设计出一样好的作品，你需要很强的审美观，高超的绘画技巧，对色彩和搭配有很深的研究，对如何更好地表达信息有独到的见解，还有，要有文艺范，还有还有。。。</p>

<!--more-->


<h3>先从我自己说起吧</h3>

<p>这件事和其它很多事情一样，困扰了我很多年。就是当你计划一件事情，而这件事是你需要做一些准备才能去做的时候，你到底要准备到什么时候或者什么程度你才会去做？比如，之前看人家写博客我觉得挺好，我想我能不能呢。然后我给自己列出了一些条件以及是否能实现的理由（似乎很可笑，但写作对于我来说一直是个挺遥远的事情，上学时写作文是我最痛苦的事情，你知道这个阴影给我多大的影响），最后还是没有实施，因为我觉得我列出的这些东西都挺难实现：</p>

<pre><code>1. 写博客需要好的文笔——我没有，写作文从来都是头疼的事情;
2. 写博客需要有严谨的思维——不确定，思维方式不像做数学题;
3. 写博客需要有渊博的知识做基础——我没有，读过一些书，好像不是太多;
4. 写博客需要很有想法——好像太多的想法，想法基本和大家一样;
</code></pre>

<p>你注意到，很多的借口都是一个感性的想法，而不是清晰而量化的阐述出现在与目标之间的差距。而这种感性的模糊的理由所带来的恐惧，往往随着自己的不确定性和对所做的东西的不了解而相应放大，而这种感觉之后会很容易不断被强化，进而让自己找出更多的理由：</p>

<pre><code>1. 有那么多人写的文章，也不差我这一个人的博客了;
2. 做点别的事也挺好，看看书还能长些知识;
3. 写博客把自己幼稚的想法写出去，让人笑话;
4. 不知道写点什么，每天都是和别人差不多的生活;
</code></pre>

<h3>其实呢</h3>

<p>其实，现在看看，那些想法都没什么，你觉得这件事是自己感兴趣的并且想做的，就去做吧。没有好的文笔，通过写博客不正式一个锻炼的机会么；严谨的思维有多重要，其实有时候能清楚地表达出自己的想法就可以了；渊博的知识，有当然好，但每个人的知识结构都是不一样的，把一件事说的高深反而让人厌恶；想法这个东西，没事思考思考都会有的，每个人的经历和对世界的体验是不同的，想法也会不同。</p>

<p>说了这么多，其实我只是想说，设计没有那么难。设计是为了更好的交流，与读者，与路人，与受众的每一个人。你在文章中把字体放大一点让别人看得更清楚，给图片加点阴影让表达更真实，把背景做的更柔和以符合你所传达的信息，等等这些都是设计。如果你也读过<a href="http://book.douban.com/subject/2995759/">The Non-Designer&rsquo;s Design Book</a>（中文版在<a href="http://book.douban.com/subject/3323633/">这里</a>），对于设计就不会那么陌生了。</p>

<p><img src="http://luckyyang.github.com/images/robin_williams.png" alt="Robin Williams" width="500"></p>

<p>Robin
Williams写的这本书让人读起来非常亲切，她归纳了四点原则贯穿设计的始终：</p>

<blockquote><ol>
<li><strong>Proximity</strong></li>
<li><strong>Alignment</strong></li>
<li><strong>Repitition</strong></li>
<li><strong>Contrast</strong></li>
</ol>
</blockquote>

<p>并通过生动的例子向我们展示了这些原则的强大和易用。想想我以前的简历和论文的排版，不就是这本书里糟糕的例子么。我建议你也读读这本书，如果你也有我曾经的这些问题：</p>

<pre><code>1. 标题字母全部大写
2. 封面字体全部居中
3. 每一页有多种字体，并且对比不明显
4. 对齐方式在一页中有很多种，左，右，中
5. 不明白段间距和行间距，一般用回车替代
6. 喜欢用Arial这种让页面风格像来自上世纪70年代的字体
7. 想把信息尽可能多的展示给别人，导致页面各个角落都有信息
</code></pre>

<p><strong>剩下的留给你自己面壁思考去吧。</strong></p>

<p>最后，和做人一样，Robin反复给出了她有趣又有用的建议：</p>

<blockquote><p><em>Don&rsquo;t be a wimp.</em>
<em>Be brave, be bold.</em></p></blockquote>

<p>瞧，画画也没那么难，我隔壁的6岁小姑娘还给我打了<strong>100分</strong>。
<img src="http://luckyyang.github.com/images/my_horse.jpg" alt="my horse" width="500"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[辞职后的这一个月我都做了什么]]></title>
    <link href="http://luckyyang.github.com/blog/2012/12/06/ci-zhi-hou-de-zhe-yi-ge-yue-wo-dou-zuo-le-shen-me/"/>
    <updated>2012-12-06T08:47:00+08:00</updated>
    <id>http://luckyyang.github.com/blog/2012/12/06/ci-zhi-hou-de-zhe-yi-ge-yue-wo-dou-zuo-le-shen-me</id>
    <content type="html"><![CDATA[<p><img src="http://luckyyang.github.com/images/sun_down.jpg" alt="who_is_who" width="500" ></p>

<ol>
<li><p>全心学习<a href="http://guides.rubyonrails.org/">Rails</a>，参照官方guides做了一遍blog教程，自己大概写了一遍。</p></li>
<li><p>坚持游泳，每次办小时，每周约4次，<a href="http://v.youku.com/v_show/id_XMzA0Njk0MjY0.html">自由泳</a>有很大进步。</p></li>
</ol>


<!-- more -->


<ol>
<li><p>看了很好的一个电影<a href="http://movie.douban.com/subject/1292656/">《心灵捕手》</a>和不错的<a href="http://movie.douban.com/review/1929689/">影评</a>。</p></li>
<li><p>用一周时间把<a href="http://book.douban.com/subject/4774858/">Agile Web Development with Rails</a>认真看完。</p></li>
<li><p>坚持使用<a href="http://pomotodo.com/index.php">番茄工作法</a>，效率有提高，休息时间变长。</p></li>
<li><p>坚持午睡30分钟。</p></li>
<li><p>没有智能手机，远离QQ，微博等社交工具，给自己多留出时间思考。</p></li>
<li><p>喜欢并开始研究<a href="https://github.com/">Github</a>风格，并和<a href="http://happycasts.net/">Peter</a>一起决定做一个Github风格的公司。</p></li>
<li><p>开通<a href="http://luckyyang.github.com/">Github博客</a>，并坚持写作。</p></li>
<li><p>听了些Shania Twain的歌，看了若干晓说和锵锵三人行。</p></li>
<li><p>将显示器用书垫高25cm，让自己的脖子舒服一些。</p></li>
<li><p>吃了很多咸鸭蛋和猪头肉，但就是不长肉。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我们要成为一个什么样的公司]]></title>
    <link href="http://luckyyang.github.com/blog/2012/12/03/wo-men-yao-cheng-wei-yi-ge-shi-yao-yang-de-gong-si/"/>
    <updated>2012-12-03T21:02:00+08:00</updated>
    <id>http://luckyyang.github.com/blog/2012/12/03/wo-men-yao-cheng-wei-yi-ge-shi-yao-yang-de-gong-si</id>
    <content type="html"><![CDATA[<p><img src="http://luckyyang.github.com/images/who_we_are.jpg" alt="who_is_who" width="500" ></p>

<blockquote><p>做一个好的产品，做一个人们喜欢用的产品。</p></blockquote>

<h3>我们是谁</h3>

<p>在这么多年的学习过程中，我们常常为了没有一个好的学习资源而苦恼。对于web设计的学习，我们通常的学习方式是去国外的网站学习，看英文的书，学习他们的优秀思想。对于我们自己的能力是提高了一些，但是对于喜欢看中文资料的人，很多的资料只是国外优秀资料的只言片语，或者外文的中文翻译质量不好，以及翻译的不及时，都会对学习过程有很大的影响。而学校的教育更偏重于理论教育，导致了学生在考试方面更擅长，而对于动手操作方面始终是一个弱项。因此我们就想，我们能为国内的教育做点什么呢？于是我们几个人决定一起做一个产品，这也就是这篇文章里”我们“的由来，我们做的这个产品要包括以下特点：</p>

<ul>
<li>偏重于实际开发，开发中用不到的不涉及；</li>
<li>侧重动手操作，理论讲解尽可能少；</li>
<li>不做实体的培训机构；</li>
<li>做一个平台，不把自己的公司做大；</li>
<li>节省所有参与者的时间；</li>
</ul>


<p>最后我们决定做一个视频网站，视频内容专注于web开发技术。我们把这个网站定位为教育类网站，因为我们有很多人都从事过教育相关的工作，而且最重要的是，我们热爱教育，我们希望通过我们的努力，给希望从事web开发的人提供一种高效率的学习方式。</p>

<p>我们成立这个网站的目的，就是希望通过我们的努力，给学习的人一个好的平台，通过这个平台，老师们可以展示自己的技能，学习者可以用较少的时间学到最有用的知识。如果说大学里教授的知识只有15%能用到实际中，那我们就只教授那15%的知识。教育是一个很复杂的工程，我们知道，要做到这一点，很难。我们常说，有困难不可怕，可怕的是没有方向。我们现在已经有了一个很好的方向，以后的工作就是朝着这个目标努力就好了。</p>

<!-- more -->


<h3>关于管理</h3>

<p>我们厌倦大公司里繁多的规章制度，没完没了的会议，公司的目标对于个人始终不是一个方向。因此我们的目标不是成为大公司，我们会刻意保持公司的“小”。</p>

<p>追求自由和喜欢探索是我们的生活方式，因此我们很小心的使用“公司”这个词，因为当前这个词更多的表示一种压抑的氛围，一种机械的工作方式。我们希望我们这个团队回归到公司的最原始目的，就是希望通过这种形式，把一群志同道合的人聚拢起来，形成一股比单个人强的多的力量，一起实现我们的目标。</p>

<p>我们不会有很多的规章制度，我们倡导<a href="http://zh.wikipedia.org/wiki/X%E7%90%86%E8%AE%BA%E5%92%8CY%E7%90%86%E8%AE%BA">Y型管理</a>。我们相信发挥人的主观能动性才会创造最大的价值，特别是对于需要创造力的事情而言更是如此。因此，你不需要上下班打卡，不需要每天一定要坐在办公室里规定的时间，甚至如果你觉得在家里工作效率更高，你可以在家里工作（我相信你大多数时候会愿意与这些有趣的人一起工作的，但不强迫）。</p>

<p>你可能会问，如何保证每个人都会努力工作呢？我们的回答是：因为我们相信。衡量一个人的价值不是用时间，而是她的作品。我们希望团队中的每个人都有一种自然的工作状态，这种自然就是，要么不要工作，要么保持效率最大化。</p>

<p>我们也不会单独地有经理这个职位，如果有的话，也是团队中的成员轮流担当，而且我们更有可能叫他“协调员”，没有特权。</p>

<h3>关于成员</h3>

<p>我们是一群乐于分享，有些理想主义的人。我们每个人都有多种角色，可以是程序员，也参与设计，偶尔也是客服和项目经理。因此，我们觉得团队中的每个人都应该有下面的特质：</p>

<ul>
<li>无论你是否看清生活的所有真相，你都要热爱生活</li>
<li>苛刻的诚信观</li>
<li>强烈的个人主义意识</li>
</ul>


<p>还有一些我们也很喜欢的点：
单纯，不同，喜欢分享，有点偏执狂，完美主义。</p>

<h3>FAQ</h3>

<p><em>Q: </em>我们为什么选择视频网站的这种方式？</p>

<p><em>A: </em>因为我们觉得这会给学习者带来最好的体验。</p>

<ul>
<li>我们希望每个人都能自由地学习——自由地选择适合自己的课程以及自由地选择时间去学习。</li>
<li>学习成本极大的降低。我们的收费模式不是按照单个或者单套视频来收费，而是采用包月模式，价格是现场教学的1/100，而且更重要的是，我们提供了一种自由的学习方式。</li>
<li>对于老师来说，通过网络这个平台，可以让自己的知识传播的无限广阔，更大的增加自己的影响力，而不是只限于现场的几十到几百人。而且不同于现场的讲课方式，视频的方式只需要录制一次，节省下来的时间就可以投入的无限的创作中去。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[别去编程]]></title>
    <link href="http://luckyyang.github.com/blog/2012/11/19/do-not-program/"/>
    <updated>2012-11-19T17:47:00+08:00</updated>
    <id>http://luckyyang.github.com/blog/2012/11/19/do-not-program</id>
    <content type="html"><![CDATA[<p>
向左走，向右走。
</p>


<p>
也许你想到了这个：<br />
<img src="http://luckyyang.github.com/images/away.png" alt="away" >
</p>




<!-- more -->


<p>
但为什么不是这个呢：<br />
<img src="http://luckyyang.github.com/images/meet.png" alt="meet" >
<br />
如果他们生活在一个二维世界，在这条路上，最终的结果就是：相遇。
</p>


<p>
如果你觉得我这篇文章是要说编程是如何如何的不好，那你错了。其实我想说的是，如果你真的不喜欢编程，别去编程。我们每天都在相遇和错过中度过，现在既然你遇到了编程，每天与它为伍，发挥你的能力，自由的创造，还有什么比这更令人满足的了么？！
</p>


<p>
我接触的有些程序员似乎对编程的喜欢总是摇摆的，我总结的以下几点，欢迎补充。
其实这些程序员多数是刚入门的人，他们还处于探索阶段，比较容易相信那些“过来人”或者容易受一些言论特别是负面的东西影响。而在社会上莫怕滚打了几年的人，要么已经找到自己的方向，要不就随波逐流或者已经麻木。
</p>




<h3>编程会早死</h3>


<p>
早死只是极少数的人，不过健康问题，无论哪个行业，都应该重视。确实有一些程序员——好吧，我承认，挺多程序员——都有健康问题。上周（离职的那周）我们公司请了个中医给我们免费做一周身体调理，结果我预约了一周都没约上，最后再延长一周，亚健康人群数量可见一斑。
</p>


<p>
加班，久坐，饮食不规律，不运动，回到家继续面对电脑或电视。。。我能想到的这几条原因，除了第一条，其它的好像都是自身的原因。你说加班是一切的根源，那么晚回到家能干什么呢，周末更得好好休息一下，哪有那么多时间运动。那轮到我来问你，你为什么不改变一下呢？Stop！！！我不想再听你的解释了。。。
</p>


<h3>编程再牛，以后发展也不大，不如转去做管理</h3>


<p>
有这种观点的人，是因为觉得编程有经验了之后管理能力也会随之而来？还是觉得管理就是把代码管理好，或者让人把代码管理好？还是觉得这是一个正常的发展渠道？你可能觉得管理不就是管人么，带领几个人把项目搞定不就得了。
</p>


<p>
现在的管理似乎和几年前的管理不太一样，特别是在IT行业，大公司已经不能向以前那样叱诧风云，而且大公司也不是最优秀的程序员的首选，所以大公司的那套管理晋升流程已经不那么深入人心了。反而一些小公司，更灵活应对市场需求，工作环境更人性化，普通意义上的“管”已经不那么明显了。
</p>




<h3>我当初入门只是觉得这个薪水要好些</h3>


<p>
你到了一个山头总会发现远处还有更高的山头，不是么？想清楚自己真正想要什么吧。你做技术，看到人家销售多风光，有提成，没事还能在外面吃吃喝喝，风流快活；人家公司加班还有加班费；我表哥的姐姐的姨妈的女儿的舅舅的外甥高中就出来开超市，现在每个月能赚好几万呢。
</p>


<p>
当你认定一个东西不好的时候，总是有一千个理由。总是在这种彷徨中挣扎，也很难赚到大钱。有功夫还是想想怎么赚钱吧。或者，想想做哪些我喜欢的事可以赚钱。
</p>


<h3>科技行业更新换代太快，说不定哪天就被淘汰了</h3>


<p>
希望symbian生态链的开发者不要这么说，投入到当前的智能手机开发领域，应该让人更兴奋才对。可能有这种想法的人，都是本来就不爱学习的人，积极的人是不会每天在各种论坛传播这种消极思想的，他们会把更多的时间放在持续提升自己的能力上。如果你是一个不爱学习的人，那我劝你也不要选择编程。
</p>




<p>
享受编程的乐趣吧！
</p>



]]></content>
  </entry>
  
</feed>
